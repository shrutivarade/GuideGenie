# -*- coding: utf-8 -*-
"""model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FhTvt6dsXG3-PGIJU6IQ83CEkIhGv45G
"""

import numpy as np
import google.generativeai as genai
from sklearn.metrics.pairwise import cosine_similarity

genai.configure(api_key="AIzaSyAWOy8lIg8xL8btx6hcrMctxzfEsAgoc7k")
genai_model = genai.GenerativeModel('gemini-pro')

def get_gemini_embedding(text):
  result = genai.embed_content(
      model="models/embedding-001",
      content=text,
      task_type="retrieval_document",
      title="Embedding of single string")
  return result['embedding']

def recommend_professors_gemini(professors_data, name, interests, intro, major):
    # student_interests = summarize_student_info_with_gemini(student_interests)
    student_interests = name + '; ' + major + '; ' + interests + '; ' + intro

    student_embedding = get_gemini_embedding(student_interests)

    # Calculate cosine similarity between student and all professors
    cos_similarities = [cosine_similarity(np.array(student_embedding).reshape(1, -1), np.array(prof_emb).reshape(1, -1))[0][0] for prof_emb in professors_data['Gemini_Embedding']]

    # Get top 3 matching professors
    top_prof_indices = np.argsort(cos_similarities)[-3:][::-1]
    return professors_data.iloc[top_prof_indices]